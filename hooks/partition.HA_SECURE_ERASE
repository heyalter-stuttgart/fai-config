#!/bin/bash

set -x

wipe_nvme () {
  nvme format --ses=1 --force $1
  RC=$?
  if [ $RC -eq 0 ]; then
    return 0
  fi

  systemctl suspend -i

  nvme format --ses=1 --force $1
  RC=$?
  if [ $RC -eq 0 ]; then
    return 0
  fi

  return $RC
}

wipe_ata () {
  hdparm --user-master u --security-set-pass schule $1
  hdparm --user-master u --security-erase schule $1
  RC=$?
  if [ $RC -eq 0 ]; then
    return 0
  fi

  systemctl suspend -i

  hdparm --user-master u --security-set-pass schule $1
  hdparm --user-master u --security-erase schule $1
  RC=$?
  if [ $RC -eq 0 ]; then
    return 0
  fi

  return $RC
}

fast_wipe_all () {
  DISKDEV_FAILED_LIST=""
  for d in $disklist
  do
    case "$d" in 
      *nvme*)
        wipe_nvme /dev/$d;; 
      *)
        wipe_ata /dev/$d;;
    esac
    RC=$?

    if [ $RC -eq 0 ]; then
      continue
    fi

    DISKDEV_FAILED_LIST="$DISKDEV_FAILED_LIST /dev/$d"
  done
}

wipe_nwipe () {  
  nwipe -m random --nogui --verify=off --autonuke --nousb "$@"
}

check_all_zero () {
  nwipe -m verify_zero --nogui --autonuke --nousb

  if [ $? -ne 0 ]; then
    read -rsp $'zero-verification not successfull!\n' -n 1 -t 120;
    systemctl poweroff
  fi
}

main () {
  if [ -z "$disklist" ]; then
    read -rsp $'disklist empty' -n 1 -t 120;
    systemctl poweroff
  fi

  fast_wipe_all

  # fallback
  if [ -n "$DISKDEV_FAILED_LIST" ]; then
    wipe_nwipe $DISKDEV_FAILED_LIST
  fi

  check_all_zero
}

main